{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  items: []\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addToCart(state, action) {\n      const {\n        productId,\n        quantity\n      } = action.payload;\n      const indexProductId = state.items.findIndex(item => item.productId === productId);\n      // Corrected index check\n      if (indexProductId !== -1) {\n        state.items[indexProductId].quantity += quantity;\n      } else {\n        state.items.push({\n          productId,\n          quantity\n        });\n      }\n    },\n    changeQuantity(state, action) {\n      const {\n        productId,\n        quantity\n      } = action.payload;\n      const indexProductId = state.items.findIndex(item => item.productId === productId);\n      // Only proceed if product is found in the items array\n      if (indexProductId !== -1) {\n        if (quantity > 0) {\n          state.items[indexProductId].quantity = quantity;\n        } else {\n          state.items = state.items.filter(item => item.productId !== productId);\n        }\n      }\n    }\n  }\n});\nexport const {\n  addToCart,\n  changeQuantity\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","items","cartSlice","name","reducers","addToCart","state","action","productId","quantity","payload","indexProductId","findIndex","item","push","changeQuantity","filter","actions","reducer"],"sources":["D:/Fullstack dev/Project/React shopping cart/client/src/store/cart.jsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  items: [],\r\n};\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState,\r\n  reducers: {\r\n    addToCart(state, action) {\r\n      const { productId, quantity } = action.payload;\r\n      const indexProductId = state.items.findIndex(\r\n        (item) => item.productId === productId\r\n      );\r\n      // Corrected index check\r\n      if (indexProductId !== -1) {\r\n        state.items[indexProductId].quantity += quantity;\r\n      } else {\r\n        state.items.push({ productId, quantity });\r\n      }\r\n    },\r\n    changeQuantity(state, action) {\r\n      const { productId, quantity } = action.payload;\r\n      const indexProductId = state.items.findIndex(\r\n        (item) => item.productId === productId\r\n      );\r\n      // Only proceed if product is found in the items array\r\n      if (indexProductId !== -1) {\r\n        if (quantity > 0) {\r\n          state.items[indexProductId].quantity = quantity;\r\n        } else {\r\n          state.items = state.items.filter(\r\n            (item) => item.productId !== productId\r\n          );\r\n        }\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addToCart, changeQuantity } = cartSlice.actions;\r\nexport default cartSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,SAAS,GAAGH,WAAW,CAAC;EAC5BI,IAAI,EAAE,MAAM;EACZH,YAAY;EACZI,QAAQ,EAAE;IACRC,SAASA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACvB,MAAM;QAAEC,SAAS;QAAEC;MAAS,CAAC,GAAGF,MAAM,CAACG,OAAO;MAC9C,MAAMC,cAAc,GAAGL,KAAK,CAACL,KAAK,CAACW,SAAS,CACzCC,IAAI,IAAKA,IAAI,CAACL,SAAS,KAAKA,SAC/B,CAAC;MACD;MACA,IAAIG,cAAc,KAAK,CAAC,CAAC,EAAE;QACzBL,KAAK,CAACL,KAAK,CAACU,cAAc,CAAC,CAACF,QAAQ,IAAIA,QAAQ;MAClD,CAAC,MAAM;QACLH,KAAK,CAACL,KAAK,CAACa,IAAI,CAAC;UAAEN,SAAS;UAAEC;QAAS,CAAC,CAAC;MAC3C;IACF,CAAC;IACDM,cAAcA,CAACT,KAAK,EAAEC,MAAM,EAAE;MAC5B,MAAM;QAAEC,SAAS;QAAEC;MAAS,CAAC,GAAGF,MAAM,CAACG,OAAO;MAC9C,MAAMC,cAAc,GAAGL,KAAK,CAACL,KAAK,CAACW,SAAS,CACzCC,IAAI,IAAKA,IAAI,CAACL,SAAS,KAAKA,SAC/B,CAAC;MACD;MACA,IAAIG,cAAc,KAAK,CAAC,CAAC,EAAE;QACzB,IAAIF,QAAQ,GAAG,CAAC,EAAE;UAChBH,KAAK,CAACL,KAAK,CAACU,cAAc,CAAC,CAACF,QAAQ,GAAGA,QAAQ;QACjD,CAAC,MAAM;UACLH,KAAK,CAACL,KAAK,GAAGK,KAAK,CAACL,KAAK,CAACe,MAAM,CAC7BH,IAAI,IAAKA,IAAI,CAACL,SAAS,KAAKA,SAC/B,CAAC;QACH;MACF;IACF;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH,SAAS;EAAEU;AAAe,CAAC,GAAGb,SAAS,CAACe,OAAO;AAC9D,eAAef,SAAS,CAACgB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}