{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\n\n// Helper function to safely get data from localStorage\nconst getLocalStorageData = (key, defaultValue) => {\n  try {\n    const storedData = localStorage.getItem(key);\n    return storedData ? JSON.parse(storedData) : defaultValue;\n  } catch (error) {\n    console.error(`Error reading from localStorage: ${error}`);\n    return defaultValue;\n  }\n};\n\n// Helper function to safely set data to localStorage\nconst setLocalStorageData = (key, value) => {\n  try {\n    localStorage.setItem(key, JSON.stringify(value));\n  } catch (error) {\n    console.error(`Error writing to localStorage: ${error}`);\n  }\n};\nconst initialState = {\n  items: getLocalStorageData(\"carts\", []),\n  statusTab: false\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addToCart(state, action) {\n      const {\n        productId,\n        quantity\n      } = action.payload;\n\n      // Data validation\n      if (typeof productId !== 'number' || typeof quantity !== 'number' || quantity <= 0) {\n        console.error('Invalid payload data for addToCart:', action.payload);\n        return;\n      }\n      const indexProductId = state.items.findIndex(item => item.productId === productId);\n      if (indexProductId !== -1) {\n        state.items[indexProductId].quantity += quantity;\n      } else {\n        state.items.push({\n          productId,\n          quantity\n        });\n      }\n      setLocalStorageData(\"carts\", state.items);\n    },\n    changeQuantity(state, action) {\n      const {\n        productId,\n        quantity\n      } = action.payload;\n\n      // Data validation\n      if (typeof productId !== 'number' || typeof quantity !== 'number' || quantity < 0) {\n        console.error('Invalid payload data for changeQuantity:', action.payload);\n        return;\n      }\n      const indexProductId = state.items.findIndex(item => item.productId === productId);\n      if (indexProductId !== -1) {\n        if (quantity > 0) {\n          state.items[indexProductId].quantity = quantity;\n        } else {\n          state.items = state.items.filter(item => item.productId !== productId);\n        }\n      }\n      setLocalStorageData(\"carts\", state.items);\n    },\n    toggleStatusTab(state) {\n      state.statusTab = !state.statusTab;\n    }\n  }\n});\nexport const {\n  addToCart,\n  changeQuantity,\n  toggleStatusTab\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","getLocalStorageData","key","defaultValue","storedData","localStorage","getItem","JSON","parse","error","console","setLocalStorageData","value","setItem","stringify","initialState","items","statusTab","cartSlice","name","reducers","addToCart","state","action","productId","quantity","payload","indexProductId","findIndex","item","push","changeQuantity","filter","toggleStatusTab","actions","reducer"],"sources":["D:/Fullstack dev/Project/React shopping cart/client/src/store/cart.jsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n// Helper function to safely get data from localStorage\r\nconst getLocalStorageData = (key, defaultValue) => {\r\n  try {\r\n    const storedData = localStorage.getItem(key);\r\n    return storedData ? JSON.parse(storedData) : defaultValue;\r\n  } catch (error) {\r\n    console.error(`Error reading from localStorage: ${error}`);\r\n    return defaultValue;\r\n  }\r\n};\r\n\r\n// Helper function to safely set data to localStorage\r\nconst setLocalStorageData = (key, value) => {\r\n  try {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  } catch (error) {\r\n    console.error(`Error writing to localStorage: ${error}`);\r\n  }\r\n};\r\n\r\nconst initialState = {\r\n  items: getLocalStorageData(\"carts\", []),\r\n  statusTab: false,\r\n};\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState,\r\n  reducers: {\r\n    addToCart(state, action) {\r\n      const { productId, quantity } = action.payload;\r\n\r\n      // Data validation\r\n      if (typeof productId !== 'number' || typeof quantity !== 'number' || quantity <= 0) {\r\n        console.error('Invalid payload data for addToCart:', action.payload);\r\n        return;\r\n      }\r\n\r\n      const indexProductId = state.items.findIndex(\r\n        (item) => item.productId === productId\r\n      );\r\n\r\n      if (indexProductId !== -1) {\r\n        state.items[indexProductId].quantity += quantity;\r\n      } else {\r\n        state.items.push({ productId, quantity });\r\n      }\r\n      \r\n      setLocalStorageData(\"carts\", state.items);\r\n    },\r\n    changeQuantity(state, action) {\r\n      const { productId, quantity } = action.payload;\r\n\r\n      // Data validation\r\n      if (typeof productId !== 'number' || typeof quantity !== 'number' || quantity < 0) {\r\n        console.error('Invalid payload data for changeQuantity:', action.payload);\r\n        return;\r\n      }\r\n\r\n      const indexProductId = state.items.findIndex(\r\n        (item) => item.productId === productId\r\n      );\r\n\r\n      if (indexProductId !== -1) {\r\n        if (quantity > 0) {\r\n          state.items[indexProductId].quantity = quantity;\r\n        } else {\r\n          state.items = state.items.filter(\r\n            (item) => item.productId !== productId\r\n          );\r\n        }\r\n      }\r\n\r\n      setLocalStorageData(\"carts\", state.items);\r\n    },\r\n    toggleStatusTab(state) {\r\n      state.statusTab = !state.statusTab;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addToCart, changeQuantity, toggleStatusTab } = cartSlice.actions;\r\nexport default cartSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}