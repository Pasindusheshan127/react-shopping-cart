{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  items: []\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    addToCart(state, action) {\n      const {\n        productId,\n        quantity\n      } = action.payload;\n      const indexProductId = state.items.findIndex(item => item.productId === productId);\n      if (indexProductId) {\n        state.items[indexProductId].quantity += quantity;\n      } else {\n        state.items.push({\n          productId,\n          quantity\n        });\n      }\n      state.items.push({\n        productId,\n        quantity\n      });\n    },\n    changeQuantity(state, action) {\n      const {\n        productId,\n        quantity\n      } = action.payload;\n      const indexProductId = state.items.findIndex(item => item.productId === productId);\n      if (quantity > 0) {\n        state.items[indexProductId].quantity = quantity;\n      } else {\n        state.items = state.items.filter(item => item.productId !== productId);\n      }\n    }\n  }\n});\nexport const {\n  addToCart,\n  changeQuantity\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","items","cartSlice","name","reducers","addToCart","state","action","productId","quantity","payload","indexProductId","findIndex","item","push","changeQuantity","filter","actions","reducer"],"sources":["D:/Fullstack dev/Project/React shopping cart/client/src/store/cart.jsx"],"sourcesContent":["import {createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    items:[]\r\n}\r\n\r\nconst cartSlice = createSlice({\r\n    name:'cart',\r\n    initialState,\r\n    reducers:{\r\n          addToCart(state,action){\r\n            const {productId,quantity} = action.payload;\r\n            const indexProductId = (state.items).findIndex(item => item.productId === productId);\r\n            if(indexProductId){\r\n              state.items[indexProductId].quantity += quantity;\r\n            }else{\r\n              state.items.push({productId,quantity});\r\n            }\r\n            state.items.push({productId,quantity});\r\n          },\r\n         changeQuantity(state,action){\r\n           const {productId,quantity} = action.payload;\r\n           const indexProductId = (state.items).findIndex(item => item.productId === productId);\r\n           if( quantity > 0){\r\n             state.items[indexProductId].quantity = quantity;\r\n           }else{\r\n            state.items = (state.items).filter(item => item.productId !== productId);\r\n           }\r\n         }\r\n    }\r\n})\r\n\r\nexport const {addToCart , changeQuantity} = cartSlice.actions;\r\nexport default cartSlice.reducer;"],"mappings":"AAAA,SAAQA,WAAW,QAAQ,kBAAkB;AAE7C,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAC;AACV,CAAC;AAED,MAAMC,SAAS,GAAGH,WAAW,CAAC;EAC1BI,IAAI,EAAC,MAAM;EACXH,YAAY;EACZI,QAAQ,EAAC;IACHC,SAASA,CAACC,KAAK,EAACC,MAAM,EAAC;MACrB,MAAM;QAACC,SAAS;QAACC;MAAQ,CAAC,GAAGF,MAAM,CAACG,OAAO;MAC3C,MAAMC,cAAc,GAAIL,KAAK,CAACL,KAAK,CAAEW,SAAS,CAACC,IAAI,IAAIA,IAAI,CAACL,SAAS,KAAKA,SAAS,CAAC;MACpF,IAAGG,cAAc,EAAC;QAChBL,KAAK,CAACL,KAAK,CAACU,cAAc,CAAC,CAACF,QAAQ,IAAIA,QAAQ;MAClD,CAAC,MAAI;QACHH,KAAK,CAACL,KAAK,CAACa,IAAI,CAAC;UAACN,SAAS;UAACC;QAAQ,CAAC,CAAC;MACxC;MACAH,KAAK,CAACL,KAAK,CAACa,IAAI,CAAC;QAACN,SAAS;QAACC;MAAQ,CAAC,CAAC;IACxC,CAAC;IACFM,cAAcA,CAACT,KAAK,EAACC,MAAM,EAAC;MAC1B,MAAM;QAACC,SAAS;QAACC;MAAQ,CAAC,GAAGF,MAAM,CAACG,OAAO;MAC3C,MAAMC,cAAc,GAAIL,KAAK,CAACL,KAAK,CAAEW,SAAS,CAACC,IAAI,IAAIA,IAAI,CAACL,SAAS,KAAKA,SAAS,CAAC;MACpF,IAAIC,QAAQ,GAAG,CAAC,EAAC;QACfH,KAAK,CAACL,KAAK,CAACU,cAAc,CAAC,CAACF,QAAQ,GAAGA,QAAQ;MACjD,CAAC,MAAI;QACJH,KAAK,CAACL,KAAK,GAAIK,KAAK,CAACL,KAAK,CAAEe,MAAM,CAACH,IAAI,IAAIA,IAAI,CAACL,SAAS,KAAKA,SAAS,CAAC;MACzE;IACF;EACL;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAACH,SAAS;EAAGU;AAAc,CAAC,GAAGb,SAAS,CAACe,OAAO;AAC7D,eAAef,SAAS,CAACgB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}